Creating SSH key some additons from first developer
---------------- some more additons from first developer
$ cd ~\.ssh
$ ssh-keygen -t rsa -C "danielhood@hotmail.com"

Copy contents of id_rsa.pub to SSH key list on github.com

Inital Setup of GIT config info (not essential)
-------------------------------
$ git config --global user.name "Firstname Lastname"
$ git config --global user.email "your_email@youremail.com"

- Setup git link to account - for non-SSH apps
$ git config --global github.user username
$ git config --global github.token 0123456789yourf0123456789token

Initial Setup of a new repository
---------------------------------
$ mkdir pic
$ cd pic
$ git init
$ touch README
$ git commit -a
$ git remote add origin git@github.com:danielhood/pic.git
$ git push -u origin master


Setting up an existing repository on a remote machine
---------------------------------------------

>>> best to just use git clone

- Create folder on local system.  (e.g. git/general)
- Open git bash in folder 
$ git init

$ git remote add origin git@github.com:danielhood/general.git

- copy .ssh/id_rsa.* files
- Pull remote repository
$ git pull origin master


Clone Alternative:
------------------

$ git clone git@github.com:danielhood/general.git general-clone
$ cd general-clone
[$ git branch branch_name master]
$ git checkout [branch_name]

Clone should automatically update the .git/config file to set the remote and branch entires:

[remote "origin"]
        fetch = +refs/heads/*:refs/remotes/origin/*
        url = git@github.com:danielhood/general.git
[branch "master"]
        remote = origin
        merge = refs/heads/master
		
		

Reset
-----
- very useful for resetting state of the local git repo
$ git reset

Adding new stuff
----------------
- add everything, including sub folders
$ git add .

Ignoring stuff
--------------
- edit .git/info/exclude
- each directory can also contain a .gitignore file


